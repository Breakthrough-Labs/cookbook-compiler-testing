{
  "errors": [
    {
      "sourceLocation": {
        "file": "src/A.sol",
        "start": -1,
        "end": -1
      },
      "type": "Warning",
      "component": "general",
      "severity": "warning",
      "errorCode": "1878",
      "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
      "formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> src/A.sol\n\n"
    },
    {
      "sourceLocation": {
        "file": "src/B.sol",
        "start": -1,
        "end": -1
      },
      "type": "Warning",
      "component": "general",
      "severity": "warning",
      "errorCode": "1878",
      "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
      "formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> src/B.sol\n\n"
    }
  ],
  "sources": {
    "src/A.sol": {
      "id": 0,
      "ast": {
        "absolutePath": "src/A.sol",
        "id": 4,
        "exportedSymbols": {
          "A": [
            3
          ],
          "B": [
            6
          ]
        },
        "nodeType": "SourceUnit",
        "src": "1:58:0",
        "nodes": [
          {
            "id": 1,
            "nodeType": "PragmaDirective",
            "src": "1:24:0",
            "nodes": [],
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".10"
            ]
          },
          {
            "id": 2,
            "nodeType": "ImportDirective",
            "src": "26:17:0",
            "nodes": [],
            "absolutePath": "src/B.sol",
            "file": "./B.sol",
            "nameLocation": "-1:-1:-1",
            "scope": 4,
            "sourceUnit": 7,
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "id": 3,
            "nodeType": "ContractDefinition",
            "src": "44:14:0",
            "nodes": [],
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "A",
            "contractDependencies": [],
            "contractKind": "contract",
            "fullyImplemented": true,
            "linearizedBaseContracts": [
              3
            ],
            "name": "A",
            "nameLocation": "53:1:0",
            "scope": 4,
            "usedErrors": [],
            "usedEvents": []
          }
        ]
      }
    },
    "src/B.sol": {
      "id": 1,
      "ast": {
        "absolutePath": "src/B.sol",
        "id": 7,
        "exportedSymbols": {
          "B": [
            6
          ]
        },
        "nodeType": "SourceUnit",
        "src": "1:40:1",
        "nodes": [
          {
            "id": 5,
            "nodeType": "PragmaDirective",
            "src": "1:24:1",
            "nodes": [],
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".10"
            ]
          },
          {
            "id": 6,
            "nodeType": "ContractDefinition",
            "src": "26:14:1",
            "nodes": [],
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "B",
            "contractDependencies": [],
            "contractKind": "contract",
            "fullyImplemented": true,
            "linearizedBaseContracts": [
              6
            ],
            "name": "B",
            "nameLocation": "35:1:1",
            "scope": 7,
            "usedErrors": [],
            "usedEvents": []
          }
        ]
      }
    }
  },
  "contracts": {
    "src/A.sol": {
      "A": {
        "abi": [],
        "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/A.sol\":\"A\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/A.sol\":{\"keccak256\":\"0x438324ed0ab4911127832e09da41fdd41f643c26b312030ffdc1afb77b79a3b0\",\"urls\":[\"bzz-raw://3e67302dfcb5cb1e243f96e0cbb55e384630a436d8b352929246cbea195b3c93\",\"dweb:/ipfs/QmTfgdeoQrt25bPsWUb5k2wqLK9SUPyu8tAh9YqmHxBgDg\"]},\"src/B.sol\":{\"keccak256\":\"0x3c0e77a5692f118677655ae99c07a9fc9aa5a224b7bb57797d99bfe7b2e50c8b\",\"urls\":[\"bzz-raw://7ca14b6286f75b00d5ce97f15474a6385b9f5aebb6658fda46f8655552eeb0f5\",\"dweb:/ipfs/QmcWJ2aD3p8Up3bKNkeWTJRkH7pXRwxcdwgwvD4cWUgQvx\"]}},\"version\":1}",
        "userdoc": {
          "version": 1,
          "kind": "user"
        },
        "devdoc": {
          "version": 1,
          "kind": "dev"
        },
        "evm": {
          "bytecode": {
            "object": "6080604052348015600e575f80fd5b50603e80601a5f395ff3fe60806040525f80fdfea2646970667358221220a8e65ba48f4f486e60114f94c13d3f36eddabb5f3e23d9bda9ae61975eea6d0964736f6c63430008180033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 0xE6 JUMPDEST LOG4 DUP16 0x4F BASEFEE PUSH15 0x60114F94C13D3F36EDDABB5F3E23D9 0xBD 0xA9 0xAE PUSH2 0x975E 0xEA PUSH14 0x964736F6C634300081800330000 ",
            "sourceMap": "44:14:0:-:0;;;;;;;;;;;;;;;;;;;",
            "linkReferences": {}
          }
        }
      }
    },
    "src/B.sol": {
      "B": {
        "abi": [],
        "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/B.sol\":\"B\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/B.sol\":{\"keccak256\":\"0x3c0e77a5692f118677655ae99c07a9fc9aa5a224b7bb57797d99bfe7b2e50c8b\",\"urls\":[\"bzz-raw://7ca14b6286f75b00d5ce97f15474a6385b9f5aebb6658fda46f8655552eeb0f5\",\"dweb:/ipfs/QmcWJ2aD3p8Up3bKNkeWTJRkH7pXRwxcdwgwvD4cWUgQvx\"]}},\"version\":1}",
        "userdoc": {
          "version": 1,
          "kind": "user"
        },
        "devdoc": {
          "version": 1,
          "kind": "dev"
        },
        "evm": {
          "bytecode": {
            "object": "6080604052348015600e575f80fd5b50603e80601a5f395ff3fe60806040525f80fdfea2646970667358221220781937f9d3977bda28fd51914be85b63b3a560714c4627d673e956c78db96a0764736f6c63430008180033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0x1937F9D3977BDA28FD51914BE85B63B3A560714C4627D673E9 JUMP 0xC7 DUP14 0xB9 PUSH11 0x764736F6C634300081800 CALLER ",
            "sourceMap": "26:14:1:-:0;;;;;;;;;;;;;;;;;;;",
            "linkReferences": {}
          }
        }
      }
    }
  }
}